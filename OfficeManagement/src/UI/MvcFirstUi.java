/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Controller.OfficeManagementController;
import Model.AddressDetailsModel;
import java.util.LinkedList;
import java.util.List;

import javax.swing.table.DefaultTableModel;
//import static sun.text.normalizer.NormalizerBase.NO;

/**
 *
 * @author line 2
 */
public class MvcFirstUi extends javax.swing.JFrame {

    DefaultTableModel model;
    private OfficeManagementController mvcController = null;
    List<AddressDetailsModel> textFieldData = null;
    AddressDetailsModel mvcModel = null;

    /**
     * Creates new form NewJFrame
     */
    public MvcFirstUi() {
        initComponents();
        this.mvcTableContent();

    }

    private void mvcTableContent() {
        model = (DefaultTableModel) mvcTable.getModel();

        if (mvcController == null) {
            mvcController = new OfficeManagementController();
        }
        mvcController.tableContent(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        departmentTextField = new javax.swing.JTextField();
        designationTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mvcTable = new javax.swing.JTable();
        insertButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        idLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idTextField1 = new javax.swing.JTextField();
        departmentTextField1 = new javax.swing.JTextField();
        designationTextField1 = new javax.swing.JTextField();
        nameLabel1 = new javax.swing.JLabel();
        nameTextField1 = new javax.swing.JTextField();
        idLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idTextField2 = new javax.swing.JTextField();
        departmentTextField2 = new javax.swing.JTextField();
        designationTextField2 = new javax.swing.JTextField();
        nameLabel2 = new javax.swing.JLabel();
        nameTextField2 = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        presentAddress = new javax.swing.JLabel();
        presentAddressTextField = new javax.swing.JTextField();
        parmanenetAddress = new javax.swing.JLabel();
        parmanentAddressTextField = new javax.swing.JTextField();
        presentAddress1 = new javax.swing.JLabel();
        presentAddressTextField1 = new javax.swing.JTextField();
        parmanenetAddress1 = new javax.swing.JLabel();
        parmanentAddressTextField1 = new javax.swing.JTextField();
        presentAddress2 = new javax.swing.JLabel();
        presentAddressTextField2 = new javax.swing.JTextField();
        parmanenetAddress2 = new javax.swing.JLabel();
        parmanentAddressTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        idLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        idLabel.setText("ID:");
        getContentPane().add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 30, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Department:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 120, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Designation:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 120, 40));

        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 250, 30));
        getContentPane().add(departmentTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 250, 30));
        getContentPane().add(designationTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 250, 30));

        mvcTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Department", "Designation", "ID", "Manager Name", "Present Address", "parmanenet Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mvcTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mvcTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mvcTable);
        if (mvcTable.getColumnModel().getColumnCount() > 0) {
            mvcTable.getColumnModel().getColumn(0).setResizable(false);
            mvcTable.getColumnModel().getColumn(1).setResizable(false);
            mvcTable.getColumnModel().getColumn(2).setResizable(false);
            mvcTable.getColumnModel().getColumn(3).setResizable(false);
            mvcTable.getColumnModel().getColumn(4).setResizable(false);
            mvcTable.getColumnModel().getColumn(5).setResizable(false);
            mvcTable.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 690, 310));

        insertButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        insertButton.setForeground(new java.awt.Color(0, 153, 102));
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });
        getContentPane().add(insertButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, -1));

        updateButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 153, 153));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 100, 30));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setText("Name:");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 60, 30));

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 250, 30));

        idLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        idLabel1.setText("ID:");
        getContentPane().add(idLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 60, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Department:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 130, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Designation:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 130, 130, 40));

        idTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(idTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 10, 190, 30));
        getContentPane().add(departmentTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 90, 190, 30));
        getContentPane().add(designationTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 130, 190, 30));

        nameLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel1.setText("Name:");
        getContentPane().add(nameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 50, 90, 30));

        nameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(nameTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 50, 190, 30));

        idLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        idLabel2.setText("ID:");
        getContentPane().add(idLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 380, 60, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Department:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 460, 130, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Designation:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 500, 130, 40));

        idTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(idTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 380, 190, 30));
        getContentPane().add(departmentTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 460, 190, 30));
        getContentPane().add(designationTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 500, 190, 30));

        nameLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel2.setText("Name:");
        getContentPane().add(nameLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 420, 90, 30));

        nameTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(nameTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 420, 190, 30));

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 0, 51));
        deleteButton.setText("Delete ");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 100, 30));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CSE", "SE", " ", " " }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, -1));

        presentAddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        presentAddress.setText("Present Address:");
        getContentPane().add(presentAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 160, 40));
        getContentPane().add(presentAddressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 250, 40));

        parmanenetAddress.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        parmanenetAddress.setText("Parmanent Address:");
        getContentPane().add(parmanenetAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, 30));
        getContentPane().add(parmanentAddressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 250, 40));

        presentAddress1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        presentAddress1.setText("Present Address:");
        getContentPane().add(presentAddress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 180, 160, 40));
        getContentPane().add(presentAddressTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 180, 250, 40));

        parmanenetAddress1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        parmanenetAddress1.setText("Parmanent Address:");
        getContentPane().add(parmanenetAddress1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, -1, 30));
        getContentPane().add(parmanentAddressTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 230, 250, 40));

        presentAddress2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        presentAddress2.setText("Present Address:");
        getContentPane().add(presentAddress2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 550, 160, 40));
        getContentPane().add(presentAddressTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 550, 250, 40));

        parmanenetAddress2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        parmanenetAddress2.setText("Parmanent Address:");
        getContentPane().add(parmanenetAddress2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 610, -1, 30));
        getContentPane().add(parmanentAddressTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 600, 250, 40));

        setBounds(0, 0, 1172, 703);
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed

        textFieldData = new LinkedList<AddressDetailsModel>();

        if (!idTextField.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField.getText()));
            mvcModel.setName(this.nameTextField.getText());
            mvcModel.setDepartment(this.departmentTextField.getText());
            mvcModel.setDesignation(this.designationTextField.getText());
            mvcModel.setPresentAddress(this.presentAddressTextField.getText());
            mvcModel.setParmanentAddress(this.parmanentAddressTextField.getText());
            textFieldData.add(mvcModel);
        }
        if (!idTextField1.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField1.getText()));
            mvcModel.setName(this.nameTextField1.getText());
            mvcModel.setDepartment(this.departmentTextField1.getText());
            mvcModel.setDesignation(this.designationTextField1.getText());
            mvcModel.setPresentAddress(this.presentAddressTextField1.getText());
            mvcModel.setParmanentAddress(this.parmanentAddressTextField1.getText());
            textFieldData.add(mvcModel);
        }

        if (!idTextField2.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField2.getText()));
            mvcModel.setName(this.nameTextField2.getText());
            mvcModel.setDepartment(this.departmentTextField2.getText());
            mvcModel.setDesignation(this.designationTextField2.getText());
            mvcModel.setPresentAddress(this.presentAddressTextField2.getText());
            mvcModel.setParmanentAddress(this.parmanentAddressTextField2.getText());
            textFieldData.add(mvcModel);
        }
        

        if (mvcController == null) {
            mvcController = new OfficeManagementController();
        }
//        mvcController.i
//        mvcController.insertToDatabase(Integer.parseInt(id), name, department, designation);
        mvcController.insertToControl(textFieldData);
        model.setRowCount(0);
        this.mvcTableContent();

        //model.insertRow(model.getRowCount(), new Object[] {idTextField.getText(), nameTextField.getText(), departmentTextField.getText(), designationTextField.getText()});
    }//GEN-LAST:event_insertButtonActionPerformed

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
        //this.accessibleContext.getAccessibleText()=false;
    }//GEN-LAST:event_idTextFieldActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void mvcTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mvcTableMouseClicked
//        nameTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
//        departmentTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
//        designationTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
//        idTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));

        //model = (DefaultTableModel) mvcTable.getModel();
        if (idTextField1.getText().isEmpty() && idTextField2.getText().isEmpty()) {
            if (idTextField.getText().isEmpty()) {
                nameTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
                departmentTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
                designationTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
                idTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
                presentAddressTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 5)));
                parmanentAddressTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 6)));
                
            } else {
                nameTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
                departmentTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
                designationTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
                idTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
                presentAddressTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 5)));
                parmanentAddressTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 6)));
            }
        } else if (!idTextField.getText().isEmpty() && !idTextField1.getText().isEmpty()) {
            if (idTextField2.getText().isEmpty()) {
                nameTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
                departmentTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
                designationTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
                idTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
                presentAddressTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 5)));
                parmanentAddressTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 6)));
            } else {
                nameTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
                departmentTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
                designationTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
                idTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
                presentAddressTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 5)));
                parmanentAddressTextField.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 6)));
            }
        }

//            nameTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
//            departmentTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
//            designationTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
////            idTextField2.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
//        } else if (idTextField1.getText().isEmpty() && idTextField2.getText().isEmpty()) {
//            nameTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 0)));
//            departmentTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 1)));
//            designationTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 2)));
//            idTextField1.setText(String.valueOf(model.getValueAt(mvcTable.getSelectedRow(), 3)));
//        }

    }//GEN-LAST:event_mvcTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        textFieldData = new LinkedList<AddressDetailsModel>();

        if (!idTextField.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField.getText()));
            mvcModel.setName(this.nameTextField.getText());
            mvcModel.setDepartment(this.departmentTextField.getText());
            mvcModel.setDesignation(this.designationTextField.getText());
            textFieldData.add(mvcModel);
        }
        if (!idTextField1.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField1.getText()));
            mvcModel.setName(this.nameTextField1.getText());
            mvcModel.setDepartment(this.departmentTextField1.getText());
            mvcModel.setDesignation(this.designationTextField1.getText());
            textFieldData.add(mvcModel);
        }

        if (!idTextField2.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(this.idTextField2.getText()));
            mvcModel.setName(this.nameTextField2.getText());
            mvcModel.setDepartment(this.departmentTextField2.getText());
            mvcModel.setDesignation(this.designationTextField2.getText());
            textFieldData.add(mvcModel);
        }

        if (mvcController == null) {
            mvcController = new OfficeManagementController();
        }

        mvcController.updateToData(textFieldData);
        model.setRowCount(0);
        this.mvcTableContent();

//        String id = this.idTextField.getText();
//        String name = this.nameTextField.getText();
//        String department = this.departmentTextField.getText();
//        String designation = this.designationTextField.getText();
//
//        if (mvcController == null) {
//            mvcController = new OfficeManagementController();
//
//        }
//        mvcController.updateDb(Integer.parseInt(id), name, department, designation);
//        model.setRowCount(0);
//        this.mvcTableContent();

    }//GEN-LAST:event_updateButtonActionPerformed

    private void idTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextField1ActionPerformed

    private void nameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextField1ActionPerformed

    private void idTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextField2ActionPerformed

    private void nameTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextField2ActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        textFieldData = new LinkedList<AddressDetailsModel>();
        if (!idTextField.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(idTextField.getText()));
            textFieldData.add(mvcModel);
        }
        if (!idTextField1.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(idTextField1.getText()));
            textFieldData.add(mvcModel);
        }
        if (!idTextField2.getText().isEmpty()) {
            mvcModel = new AddressDetailsModel();
            mvcModel.setId(Integer.parseInt(idTextField2.getText()));
            textFieldData.add(mvcModel);
        }

        if (mvcController == null) {
            mvcController = new OfficeManagementController();
        }
        mvcController.delete(textFieldData);
        model.setRowCount(0);
        this.mvcTableContent();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MvcFirstUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MvcFirstUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MvcFirstUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MvcFirstUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MvcFirstUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField departmentTextField;
    private javax.swing.JTextField departmentTextField1;
    private javax.swing.JTextField departmentTextField2;
    private javax.swing.JTextField designationTextField;
    private javax.swing.JTextField designationTextField1;
    private javax.swing.JTextField designationTextField2;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JLabel idLabel2;
    private javax.swing.JTextField idTextField;
    private javax.swing.JTextField idTextField1;
    private javax.swing.JTextField idTextField2;
    private javax.swing.JButton insertButton;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mvcTable;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nameTextField1;
    private javax.swing.JTextField nameTextField2;
    private javax.swing.JLabel parmanenetAddress;
    private javax.swing.JLabel parmanenetAddress1;
    private javax.swing.JLabel parmanenetAddress2;
    private javax.swing.JTextField parmanentAddressTextField;
    private javax.swing.JTextField parmanentAddressTextField1;
    private javax.swing.JTextField parmanentAddressTextField2;
    private javax.swing.JLabel presentAddress;
    private javax.swing.JLabel presentAddress1;
    private javax.swing.JLabel presentAddress2;
    private javax.swing.JTextField presentAddressTextField;
    private javax.swing.JTextField presentAddressTextField1;
    private javax.swing.JTextField presentAddressTextField2;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
